#!/usr/bin/bash
#
# name: Toggle gnome settings
# keywords: gnome toggle settings
# icon: preferences-system-symbolic

# Define settings to toggle
declare -A settings=(
    ['Pop Shell - Show title']='org.gnome.shell.extensions.pop-shell show-title'
    ['Pop Shell - Smart gaps']='org.gnome.shell.extensions.pop-shell smart-gaps'
    ['Pop Shell - Active hints']='org.gnome.shell.extensions.pop-shell hint-color-rgba' # rgba(255,255,255,0.483108)
    ['Pop Shell - Hint color']='org.gnome.Terminal.Legacy.Settings headerbar'
    ['Notifications - Show banners']='org.gnome.desktop.notifications show-banners'
    ['Accessibility - Screen magnifier']='org.gnome.desktop.a11y.applications screen-magnifier-enabled'
    ['Dash to panel - Intellihide']='org.gnome.shell.extensions.dash-to-dock intellihide'
    ['Terminal - Show headerbar']='org.gnome.Terminal.Legacy.Settings headerbar' # @mb false / @mb true
    ['Accesibility - Large text']='org.gnome.desktop.interface text-scaling-factor' # 1.0 / 1.3
)

# Define Rofi options
declare -a options=("${!settings[@]}")
selected=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "Toggle GSettings")

# Check if user selected an option
if [ -n "$selected" ]; then
    setting=${settings[$selected]}
    current_value=$(gsettings get $setting | tr -d ' ' | tr -d '\n')

    if [ $current_value = "true" ]; then
        new_value="false"
    else
        new_value="true"
    fi

    gsettings set $setting $new_value
fi
