{
  // ###############
  // ###  Font  ###
  // ###############
  "editor.fontLigatures": false,
  "editor.fontFamily": "'JetBrainsMono Nerd Font', monospace",
  "editor.fontWeight": "500",
  "editor.inlayHints.fontFamily": "'JetBrainsMono Nerd Font', monospace",
  "editor.codeLensFontFamily": "'JetBrainsMono Nerd Font', monospace",
  "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font', monospace",
  // #########################
  // ###  Theme and style  ###
  // #########################
  "workbench.preferredLightColorTheme": "Atom One Light",
  "workbench.preferredDarkColorTheme": "One Dark Pro Darker",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorCustomizations": {
    "tab.activeBorder": "#0000",
    "list.highlightForeground": "#61afef",
    "editorCursor.foreground": "#bfc4ce",
    "editorCursor.background": "#000000",
    "terminal.ansiBlack": "#282c34",
    "terminal.ansiBlue": "#61afef",
    "terminal.ansiBrightBlack": "#393e48",
    "terminal.ansiBrightBlue": "#4dc4ff",
    "terminal.ansiBrightCyan": "#4cd1e0",
    "terminal.ansiBrightGreen": "#a5e075",
    "terminal.ansiBrightMagenta": "#de73ff",
    "terminal.ansiBrightRed": "#e06c75",
    "terminal.ansiBrightWhite": "#d7dae0",
    "terminal.ansiBrightYellow": "#e5c07b",
    "terminal.ansiCyan": "#42b3c2",
    "terminal.ansiGreen": "#8cc265",
    "terminal.ansiMagenta": "#c162de",
    "terminal.ansiRed": "#e06c75",
    "terminal.ansiWhite": "#e6e6e6",
    "terminal.ansiYellow": "#e5c07b"
  },
  // ###################
  // ###  Interface  ###
  // ###################
  "window.title": "${activeEditorShort} ${dirty}",
  "workbench.editor.pinnedTabSizing": "shrink",
  "workbench.sideBar.location": "right",
  "workbench.editor.tabSizing": "shrink",
  "zenMode.hideLineNumbers": false,
  // ################
  // ###  Editor  ###
  // ################
  "editor.suggest.preview": true,
  "editor.suggestSelection": "first",
  "editor.suggest.showStatusBar": true,
  "editor.autoClosingBrackets": "always",
  "editor.autoClosingQuotes": "always",
  "editor.lineNumbers": "relative",
  "editor.occurrencesHighlight": false,
  "editor.scrollbar.horizontalScrollbarSize": 14,
  "editor.guides.bracketPairs": true,
  "editor.accessibilitySupport": "off",
  "editor.inlineSuggest.enabled": true,
  "editor.tabSize": 2,
  "editor.linkedEditing": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.parameterHints.enabled": false,
  "editor.minimap.maxColumn": 100,
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "editor.rulers": [
    80,
    120
  ],
  "editor.quickSuggestions": {
    "strings": true
  },
  // ###########################
  // ###  Life improvements  ###
  // ###########################
  "editor.quickSuggestionsDelay": 100,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.renderWhitespace": "none",
  "git.enableSmartCommit": true,
  "git.decorations.enabled": true,
  "git.confirmEmptyCommits": false,
  "git.confirmSync": false,
  "workbench.editor.languageDetection": true,
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "node_modules": true
  },
  // ##################
  // ###  Terminal  ###
  // ##################
  "terminal.external.windowsExec": "C:\\Program Files\\Git\\git-bash.exe",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.scrollback": 2500,
  "terminal.integrated.persistentSessionScrollback": 250,
  "terminal.integrated.commandsToSkipShell": [
    "-workbench.action.quickOpen"
  ],
  "terminal.integrated.cursorStyle": "line",
  // ###################
  // ###  Languages  ###
  // ###################
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.wordWrap": "off",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.tabSize": 4
  },
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[java]": {
    "editor.defaultFormatter": "mwpb.java-prettier-formatter"
  },
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "json.format.enable": true,
  "html.format.wrapAttributes": "force-aligned",
  "html.hover.references": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.associations": {
    "*.pl": "prolog",
    "*.jsx": "javascriptreact"
  },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "C_Cpp.clang_format_fallbackStyle": "Google",
  // Vscode-neovim
  "vscode-neovim.neovimInitVimPaths.linux": "/home/asaday/.vscode-neovim.vim",
  "vscode-neovim.neovimExecutablePaths.linux": "/home/linuxbrew/.linuxbrew/bin//nvim",
  "vscode-neovim.mouseSelectionStartVisualMode": true,
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1,
    "asvetliakov.vscode-neovim": 1
  },
  "vscode-neovim.neovimWidth": 120,
  // "vscode-neovim.highlightGroups.unknownHighlight": "vim",
  "vscode-neovim.highlightGroups.ignoreHighlights": [],
  "vscode-neovim.highlightGroups.highlights": {
    "IncSearch": {
      "backgroundColor": "theme.editor.findMatchBackground",
      "borderColor": "theme.editor.findMatchBorder"
    },
    "Search": {
      "backgroundColor": "theme.editor.findMatchHighlightBackground",
      "borderColor": "theme.editor.findMatchHighlightBorder"
    },
    "Visual": {
      "backgroundColor": "theme.editor.selectionBackground"
    },
    "EasyMotionTarget": {
      "backgroundColor": "theme.editor.background",
      "color": "#e06c75"
    },
    "EasyMotionTarget2First": {
      "backgroundColor": "theme.editor.background",
      "color": "#e5c075"
    },
    "EasyMotionShade": {
      "backgroundColor": "theme.terminal.ansiBlue"
    },
    "EasyMotionTarget2Second": {
      "backgroundColor": "theme.terminal.ansiGreen"
    },
    "Directory": "vim",
    "Conceal": "vim",
    "Substitute": "vim"
  },
  // Code runner
  "code-runner.runInTerminal": true,
  "code-runner.terminalRoot": "/",
  "code-runner.clearPreviousOutput": true,
  "code-runner.executorMap": {
    "python": "python3 $dir$fileName",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt -Wall -Wextra && $dir$fileNameWithoutExt"
  },
  // Live server
  "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.root": "/",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveSassCompile.settings.autoprefix": [
    "> 1%",
    "last 2 versions"
  ],
  // Other extensions
  "gitlens.keymap": "alternate",
  "material-icon-theme.showWelcomeMessage": false,
  "codesnap.showWindowControls": false,
  "oneDarkPro.italic": true,
  "svgviewer.showzoominout": true,
  "github.copilot.enable": {
    "*": false,
    "yaml": false,
    "plaintext": true,
    "markdown": true,
    "javascriptreact": true
  },
  // ###############
  // ###  Other  ###
  // ###############
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 9/5/2022, 1:52:05 PM",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, histoire.config.*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, histoire.config.*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "window.openFilesInNewWindow": "default",
  "files.eol": "\n",
  "window.newWindowDimensions": "inherit",
  "explorer.confirmDragAndDrop": false,
  "search.useReplacePreview": false,
  "workbench.editor.untitled.hint": "hidden",
  "problems.showCurrentInStatus": true,
  "security.workspace.trust.banner": "never",
  "search.searchEditor.doubleClickBehaviour": "selectWord",
  "security.workspace.trust.untrustedFiles": "open",
  "debug.onTaskErrors": "debugAnyway",
  "update.mode": "none",
  "debug.toolBarLocation": "docked",
  "window.autoDetectColorScheme": true,
  "jupyter.askForKernelRestart": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "terminal.integrated.cursorBlinking": true,
  "workbench.startupEditor": "none",
  "explorer.confirmDelete": false,
  "files.autoSave": "onFocusChange",
  "python.formatting.provider": "black",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "editor.wordWrap": "wordWrapColumn",
  "leetcode.hint.commandShortcut": false,
  "leetcode.hint.commentDescription": false,
  "leetcode.hint.configWebviewMarkdown": false,
  "[sql]": {
    "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
  },
  "git.detectSubmodules": false,
  "git.detectSubmodulesLimit": 99999,
  "window.enableMenuBarMnemonics": false,
  "window.customMenuBarAltFocus": false,
  "workbench.editor.tabCloseButton": "off",
  "gitlens.defaultDateFormat": "D MMM YY -- dddd",
  "gitlens.defaultTimeFormat": "hh:mm",
  "gitlens.defaultDateShortFormat": "D/MM/YY",
  "gitlens.defaultDateLocale": null,
  "explorer.compactFolders": false,
  "warmUp.changeCount": "15",
  "gitlens.codeLens.enabled": false,
  "commands.commands": {
    "Git Graph: View Git Graph": {
      "command": "git-graph.view"
    },
    "Git: Revert Selected Ranges": {
      "command": "git.revertSelectedRanges"
    },
    "GitLens: Open Changes with Previous Revision": {
      "command": "gitlens.diffWithPreviousInDiffLeft"
    },
    "Warm Up: Start typing test": {
      "command": "warmUp.start"
    },
    "Fold All": {
      "command": "editor.foldAll"
    },
    "Fold Recursively": {
      "command": "editor.foldRecursively"
    },
    "GitLens: Toggle File Blame": {
      "command": "gitlens.toggleFileBlame"
    },
    "GitLens: Toggle File Changes": {
      "command": "gitlens.toggleFileChanges"
    },
    "GitLens: Toggle Line Blame": {
      "command": "gitlens.toggleLineBlame"
    },
    "Codesnap": {
      "command": "codesnap.start"
    },
    "View: Toggle Zen Mode": {
      "command": "workbench.action.toggleZenMode"
    },
    "Show Definition Preview Hover": {
      "command": "editor.action.showDefinitionPreviewHover"
    },
    "Peek Definition": {
      "command": "editor.action.peekDefinition"
    },
    "Peek Implementations": {
      "command": "editor.action.peekImplementation"
    },
    "Peek Declaration": {
      "command": "editor.action.peekDeclaration"
    },
    "Peek References": {
      "command": "editor.action.referenceSearch.trigger"
    },
    "Peek Type Definition": {
      "command": "editor.action.peekTypeDefinition"
    },
    "Go to Definition": {
      "command": "editor.action.revealDefinition"
    },
    "Go to Type Definition": {
      "command": "editor.action.goToTypeDefinition"
    },
  },
  "gitlens.advanced.externalDiffTool": "meld",
  "gitlens.advanced.externalDirectoryDiffTool": "meld",
  "gitlens.currentLine.enabled": false,
  "[scss]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
  },
  "workbench.colorTheme": "One Dark Pro Darker",
  "window.titleBarStyle": "custom",
  "workbench.layoutControl.enabled": false,
  "terminal.integrated.shellIntegration.decorationsEnabled": "overviewRuler",
  "editor.experimental.stickyScroll.enabled": true,
  "editor.smoothScrolling": true,
  "editor.mouseWheelScrollSensitivity": 2,
  "editor.minimap.enabled": false,
}