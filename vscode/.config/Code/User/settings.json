{
  // ###############
  // ###  Font  ###
  // ###############
  "editor.fontLigatures": true,
  "editor.fontFamily": "'JetBrainsMono Nerd Font'",
  "editor.fontWeight": "500",
  "editor.inlayHints.fontFamily": "'JetBrainsMono Nerd Font'",
  "editor.codeLensFontFamily": "'JetBrainsMono Nerd Font'",
  "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font', monospace",
  // #########################
  // ###  Theme and style  ###
  // #########################
  "workbench.preferredLightColorTheme": "Atom One Light",
  "workbench.preferredDarkColorTheme": "One Dark Pro",
  "workbench.colorTheme": "One Dark Pro",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorCustomizations": {
    "tab.activeBorder": "#0000",
    "list.highlightForeground": "#61afef",
    "editorCursor.foreground": "#bfc4ce",
    "editorCursor.background": "#000000",
    "terminal.ansiBlack": "#282c34",
    "terminal.ansiBlue": "#61afef",
    "terminal.ansiBrightBlack": "#393e48",
    "terminal.ansiBrightBlue": "#4dc4ff",
    "terminal.ansiBrightCyan": "#4cd1e0",
    "terminal.ansiBrightGreen": "#a5e075",
    "terminal.ansiBrightMagenta": "#de73ff",
    "terminal.ansiBrightRed": "#e06c75",
    "terminal.ansiBrightWhite": "#d7dae0",
    "terminal.ansiBrightYellow": "#e5c07b",
    "terminal.ansiCyan": "#42b3c2",
    "terminal.ansiGreen": "#8cc265",
    "terminal.ansiMagenta": "#c162de",
    "terminal.ansiRed": "#e06c75",
    "terminal.ansiWhite": "#e6e6e6",
    "terminal.ansiYellow": "#e5c07b"
  },
  // ################
  // ###  Cursor  ###
  // ################
  "editor.multiCursorModifier": "ctrlCmd",
  "terminal.integrated.cursorStyle": "line",
  // ###################
  // ###  Interface  ###
  // ###################
  "window.title": "${activeEditorShort} ${dirty}",
  "window.titleBarStyle": "custom",
  "workbench.editor.pinnedTabSizing": "shrink",
  "workbench.editor.tabCloseButton": "off",
  "workbench.sideBar.location": "right",
  "workbench.editor.tabSizing": "shrink",
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false,
  // ################
  // ###  Editor  ###
  // ################
  "editor.suggest.preview": true,
  "editor.suggestSelection": "first",
  "editor.suggest.showStatusBar": true,
  "editor.autoClosingBrackets": "always",
  "editor.autoClosingQuotes": "always",
  "editor.lineNumbers": "relative",
  "editor.occurrencesHighlight": false,
  "editor.scrollbar.horizontalScrollbarSize": 14,
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.accessibilitySupport": "off",
  "editor.inlineSuggest.enabled": true,
  "editor.tabSize": 2,
  "editor.linkedEditing": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.parameterHints.enabled": false,
  "editor.minimap.maxColumn": 100,
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "editor.rulers": [
    80,
    120
  ],
  "editor.quickSuggestions": {
    "strings": true
  },
  // ###########################
  // ###  Life improvements  ###
  // ###########################
  "editor.quickSuggestionsDelay": 100,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.renderWhitespace": "none",
  "git.enableSmartCommit": true,
  "git.decorations.enabled": false,
  "git.confirmEmptyCommits": false,
  "git.confirmSync": false,
  "workbench.editor.languageDetection": true,
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "node_modules": true
  },
  // ##################
  // ###  Terminal  ###
  // ##################
  "terminal.external.windowsExec": "C:\\Program Files\\Git\\git-bash.exe",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.scrollback": 2500,
  "terminal.integrated.persistentSessionScrollback": 250,
  "terminal.integrated.commandsToSkipShell": [
    "-workbench.action.quickOpen"
  ],
  // ###################
  // ###  Languages  ###
  // ###################
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.wordWrap": "off",
    "editor.quickSuggestions": false
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.tabSize": 4
  },
  "[c]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[java]": {
    "editor.defaultFormatter": "mwpb.java-prettier-formatter"
  },
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "json.format.enable": true,
  "html.format.wrapAttributes": "force-aligned",
  "html.hover.references": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.associations": {
    "*.pl": "prolog",
    "*.jsx": "javascriptreact"
  },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter.notebook.ipynb"
  },
  "C_Cpp.clang_format_fallbackStyle": "Google",
  "leetcode.workspaceFolder": "/home/asaday/Repos/leetcode-problems",
  "leetcode.defaultLanguage": "python3",
  "leetcode.editor.shortcuts": [
    "test",
    "submit",
    "description",
    "solution"
  ],
  // Vscode-neovim
  "vscode-neovim.neovimInitVimPaths.linux": "/home/asaday/.config/nvim/init.vim",
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimWidth": 700,
  "vscode-neovim.textDecorationsAtTop": true,
  "vscode-neovim.mouseSelectionStartVisualMode": true,
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1,
    "asvetliakov.vscode-neovim": 1
  },
  // Code runner
  "code-runner.runInTerminal": true,
  "code-runner.terminalRoot": "/",
  "code-runner.clearPreviousOutput": true,
  "code-runner.executorMap": {
    "python": "python3 $dir$fileName",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt -Wall -Wextra && $dir$fileNameWithoutExt"
  },
  // Live server
  "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.root": "/",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveSassCompile.settings.showOutputWindow": false,
  "liveSassCompile.settings.autoprefix": [
    "> 1%",
    "last 2 versions"
  ],
  "liveSassCompile.settings.formats": [
    {
      "format": "compressed",
      "extensionName": ".css",
      "savePath": "~"
    }
  ],
  // Git lens
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.keymap": "alternate",
  "gitlens.codeLens.enabled": false,
  // Other extensions
  "material-icon-theme.showWelcomeMessage": false,
  "codesnap.showWindowControls": false,
  "react-native-tools.showUserTips": false,
  "oneDarkPro.italic": true,
  "svgviewer.showzoominout": true,
  "l13Projects.autoRemoveDeletedProjects": true,
  "l13Projects.git.maxDepthRecursion": 4,
  "l13Projects.confirmDeleteProject": false,
  "l13Projects.sortWorkspacesBy": "category",
  "l13Projects.git.folders": [
    "/home/asaday/Repos/",
    "/home/asaday/Dotfiles"
  ],
  "l13Projects.groupDescriptionFormat": "both",
  "github.copilot.enable": {
    "*": true,
    "yaml": false,
    "plaintext": true,
    "markdown": false,
    "python": false,
    "javascriptreact": true
  },
  // ###############
  // ###  Other  ###
  // ###############
  "window.openFilesInNewWindow": "default",
  "files.eol": "\n",
  "window.newWindowDimensions": "inherit",
  "explorer.confirmDragAndDrop": false,
  "diffEditor.renderSideBySide": false,
  "search.useReplacePreview": false,
  "debug.inlineValues": true,
  "workbench.editor.untitled.hint": "hidden",
  "diffEditor.wordWrap": "off",
  "problems.showCurrentInStatus": true,
  "security.workspace.trust.banner": "never",
  "search.searchEditor.doubleClickBehaviour": "selectWord",
  "explorer.compactFolders": false,
  "security.workspace.trust.untrustedFiles": "open",
  "debug.onTaskErrors": "debugAnyway",
  "update.mode": "none",
  "debug.toolBarLocation": "docked",
  "window.autoDetectColorScheme": true,
  "jupyter.askForKernelRestart": false,
  "window.menuBarVisibility": "toggle",
  "workbench.list.automaticKeyboardNavigation": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "terminal.integrated.cursorBlinking": true,
  "workbench.startupEditor": "none",
  "explorer.confirmDelete": false,
  "workbench.productIconTheme": "icons-carbon",
  "files.autoSave": "afterDelay",
  "python.formatting.provider": "black",
  "where-am-i.colorful": false,
  "where-am-i.textTransfrom": "none",
  "explorer.experimental.fileNesting.enabled": true,
  "explorer.experimental.fileNesting.expand": false,
  "explorer.experimental.fileNesting.patterns": {
    "//": "Last update at 5/11/2022, 11:20:57 AM"
  },
  "everforest.darkWorkbench": "flat",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "open-php-html-js-in-browser.selectedBrowser": "Firefox",
  "workbench.layoutControl.enabled": false,
  "warmUp.changeCount": "30",
  "warmUp.changeTypingMode": "words (fixed amount)",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 6/10/2022, 11:10:15 AM",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    "*.xaml": "$(capture).xaml.cs",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "editor.wordWrap": "wordWrapColumn",
  "leetcode.hint.commandShortcut": false,
  "leetcode.hint.commentDescription": false,
  "leetcode.hint.configWebviewMarkdown": false,
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
}